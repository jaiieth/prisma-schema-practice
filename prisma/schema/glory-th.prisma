// USERS
model User {
  id        Int       @id @default(autoincrement())
  name      String
  tel       Int       @unique
  email     String    @unique
  address   Address[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Order     Order[]
}

model Address {
  id          Int    @id @default(autoincrement())
  houseNumber Int
  streetName  String
  subDistrict String
  district    String
  province    String
  postcode    String
  User        User?  @relation(fields: [userId], references: [id])
  userId      Int?
}

// ORDERS 
model Order {
  id         Int       @id @default(autoincrement())
  userId     Int?
  product    Product[]
  paymentId  Int?
  shipping   String
  totalPrice Int
  status     String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  user       User?     @relation(fields: [userId], references: [id])
  Payment    Payment?  @relation(fields: [paymentId], references: [id])
}

// PRODUCTS
model Product {
  id            Int           @id @default(autoincrement())
  name          String
  description   String
  info          Info[]
  price         Float
  discountPrice Float
  soldQuantity  Int
  review        Review[]
  videoReview   VideoReview[]
  order         Order[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Info {
  id         Int      @id @default(autoincrement())
  info       String
  product_id Product? @relation(fields: [productId], references: [id])
  productId  Int?
}

model Review {
  id         Int       @id @default(autoincrement())
  authorName String
  info       String
  imageSrc   String
  product    Product[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model VideoReview {
  id        Int      @id @default(autoincrement())
  videoName String
  url       String
  thumbnail String
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// FAQ
model FAQ {
  id            Int          @id @default(autoincrement())
  question      String
  answer        String
  FAQCategory   FAQCategory? @relation(fields: [FAQCategoryId], references: [id])
  FAQCategoryId Int?
}

model FAQCategory {
  id       Int    @id @default(autoincrement())
  category String
  faq      FAQ[]
}

// PAYMENT
model Payment {
  id      Int              @id @default(autoincrement())
  type    String
  account PaymentAccount[]
  remark  PaymentRemark[]
  order   Order[]
}

// PAYMENT ACCOUNT FOR BANK TRANSFERRING
model PaymentAccount {
  id            Int      @id @default(autoincrement())
  name          String
  bankName      String
  accountNumber String
  Payment       Payment? @relation(fields: [paymentId], references: [id])
  paymentId     Int?
}

// PAYMENT REMARK FOR CREDIT CARD
model PaymentRemark {
  id        Int      @id @default(autoincrement())
  remark    String
  Payment   Payment? @relation(fields: [paymentId], references: [id])
  paymentId Int?
}
